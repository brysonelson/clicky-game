{"ast":null,"code":"import _classCallCheck from \"/Users/brysonnelson/Documents/UCSD-Coding-Bootcamp/homework/clicky-game/clicky-game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/brysonnelson/Documents/UCSD-Coding-Bootcamp/homework/clicky-game/clicky-game/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/brysonnelson/Documents/UCSD-Coding-Bootcamp/homework/clicky-game/clicky-game/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/brysonnelson/Documents/UCSD-Coding-Bootcamp/homework/clicky-game/clicky-game/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/brysonnelson/Documents/UCSD-Coding-Bootcamp/homework/clicky-game/clicky-game/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/brysonnelson/Documents/UCSD-Coding-Bootcamp/homework/clicky-game/clicky-game/src/App.js\";\nimport Counter from \"./components/Counter\";\nimport React, { Component } from \"react\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport characters from \"./characters.json\";\nimport CharacterCard from \"./components/FriendCard\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      characters: characters,\n      countedCharacters: [],\n      count: 0\n    };\n\n    _this.countCharacter = function (id) {\n      // console.log(this.state.countedCharacters.indexOf(id));\n      // Filter this.state.friends for friends with an id not equal to the id being removed\n      if (_this.state.countedCharacters.indexOf(id) === -1) {\n        var findCharacters = _this.state.characters.filter(function (character) {\n          return character.id === id;\n        }); // Set this.state.friends equal to the new friends array\n\n\n        var countedCharacters = _this.state.countedCharacters;\n\n        for (var i = 0; i < findCharacters.length; i++) {\n          countedCharacters.push(findCharacters[i].id);\n        }\n\n        console.log(findCharacters);\n\n        _this.setState({\n          countedCharacters: countedCharacters,\n          count: _this.state.count + 1\n        });\n\n        console.log(_this.state.countedCharacters);\n        console.log(_this.state.count);\n      } else {\n        _this.setState({\n          count: 0\n        });\n      }\n    };\n\n    _this.shuffleArray = function (array) {\n      for (var i = array.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var _ref = [array[j], array[i]];\n        array[i] = _ref[0];\n        array[j] = _ref[1];\n      }\n\n      _this.setState({\n        characters: array\n      });\n\n      console.log(characters);\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    // Map over this.state.friends and render a FriendCard component for each friend object\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Counter, {\n        count: this.state.count,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Friends List\"), this.state.characters.map(function (character) {\n        return React.createElement(CharacterCard, {\n          shuffleArray: _this2.countCharacter,\n          id: character.id,\n          key: character.id,\n          name: character.name,\n          image: character.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/brysonnelson/Documents/UCSD-Coding-Bootcamp/homework/clicky-game/clicky-game/src/App.js"],"names":["Counter","React","Component","Wrapper","Title","characters","CharacterCard","App","state","countedCharacters","count","countCharacter","id","indexOf","findCharacters","filter","character","i","length","push","console","log","setState","shuffleArray","array","j","Math","floor","random","map","name","image"],"mappings":"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","sourcesContent":["import Counter from \"./components/Counter\";\nimport React, { Component } from \"react\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport characters from \"./characters.json\";\nimport CharacterCard from \"./components/FriendCard\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    characters,\n    countedCharacters: [],\n    count: 0\n  };\n\n\n  countCharacter = id => {\n\n    // console.log(this.state.countedCharacters.indexOf(id));\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    if (this.state.countedCharacters.indexOf(id) === -1) {\n    const findCharacters = this.state.characters.filter((character) => character.id === id);\n    // Set this.state.friends equal to the new friends array\n    const countedCharacters = this.state.countedCharacters;\n    \n    for (let i=0; i < findCharacters.length; i++) {\n      countedCharacters.push(findCharacters[i].id);\n    }\n      \n\n    console.log(findCharacters);\n    \n\n    this.setState({ \n      countedCharacters,\n      count: this.state.count + 1\n    });\n\n    console.log(this.state.countedCharacters);\n    console.log(this.state.count);\n  } else {\n    this.setState({ count: 0 });\n  }\n  };\n\n  shuffleArray = array => {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n    this.setState({ characters: array });\n    console.log(characters);\n}\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Counter count={this.state.count}/>\n        <Title>Friends List</Title>\n        {this.state.characters.map(character => (\n          <CharacterCard\n            shuffleArray={this.countCharacter}\n            id={character.id}\n            key={character.id}\n            name={character.name}\n            image={character.image}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}